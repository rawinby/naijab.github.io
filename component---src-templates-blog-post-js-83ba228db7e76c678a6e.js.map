{"version":3,"sources":["webpack:///./src/components/card/AuthorCard.js","webpack:///./src/components/comment/disqus.js","webpack:///./src/components/tag/tag-list.js","webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/menu/navbar.js","webpack:///./src/components/footer/footer.js","webpack:///./src/components/seo/seo.js","webpack:///./src/components/container/layout.js"],"names":["AuthorCard","bioQuery","_987467040","data","_bioQuery$site$siteMe","site","siteMetadata","author","social","react_default","a","createElement","className","gatsby_image_default","fixed","avatar","childImageSharp","alt","href","twitter","facebook","github","email","DisqusComment","_ref","disqusConfig","identifier","id","title","lib","shortname","config","TagList","tags","react","ReactIf","condition","length","map","tag","i","gatsby_browser_entry","to","key","Button","size","__webpack_require__","d","__webpack_exports__","pageQuery","BlogPostTemplate","props","post","markdownRemark","layout","frontmatter","featuredImage","publicURL","description","excerpt","keywords","slug","location","pathname","isSmall","date","dangerouslySetInnerHTML","__html","html","tag_list","Row","Col","sm","card_AuthorCard","disqus","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","Object","assign","json","propTypes","shape","NavBar","_useState","useState","isOpen","toggle","logoImage","_1904331031","Navbar","expand","Container","onClick","Collapse","navbar","Nav","NavItem","Footer","_2755542751","siteUrl","outline","fa","color","Date","getFullYear","SEO","lang","_staticQueryData$data","meta","_2778875322","defaultFeaturedImage","metaTitle","slogan","metaKeywords","uniq","concat","join","metaDescription","metaImage","substring","metaUrl","Helmet_default","htmlAttributes","titleTemplate","name","content","property","facebookAppId","defaultProps","Layout","containerStyle","seo","children","footer"],"mappings":"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","file":"component---src-templates-blog-post-js-83ba228db7e76c678a6e.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nconst AuthorCard = () => {\n  const bioQuery = useStaticQuery(\n    graphql`\n      query {\n        avatar: file(absolutePath: { regex: \"/profile.jpg/\" }) {\n          childImageSharp {\n            fixed(width: 50, height: 50) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n        site {\n          siteMetadata {\n            author\n            social {\n              email\n              github\n              facebook\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const { author, social } = bioQuery.site.siteMetadata\n  return (\n    <div className=\"author-container\">\n      <Image\n        fixed={bioQuery.avatar.childImageSharp.fixed}\n        alt={author}\n        className=\"author-image\"\n      />\n      <p>\n        <strong>{author}</strong>\n        <br /> แค่คนเหาชอบเขียนโค้ด คลั่งไคล้ Dark Souls\n        และร้องเพลงเป็นชีวิตจิตใจ <br />\n        follow me: <a href={`https://twitter.com/${social.twitter}`}>\n          twitter\n        </a>{\" \"}\n        <a href={`https://facebook.com/${social.facebook}`}>facebook</a>{\" \"}\n        <a href={`https://github.com/${social.github}`}>github</a>{\" \"}\n        <a href={`mailto:${social.email}`}>e-mail</a> <br />\n        <span>#linux #darksouls #javascript #music #art #tech</span>\n      </p>\n    </div>\n  )\n}\n\nexport default AuthorCard\n","import React from \"react\"\nimport { DiscussionEmbed } from \"disqus-react\"\n\nconst DisqusComment = ({ id, title }) => {\n  const disqusConfig = {\n    identifier: id,\n    title: title,\n  }\n  return (\n    <div className=\"mt-3 mb-5\">\n      <DiscussionEmbed shortname=\"naijab\" config={disqusConfig} />\n    </div>\n  )\n}\n\nexport default DisqusComment\n","import React, { Fragment } from \"react\"\nimport { If, Then, Else } from \"react-if\"\nimport { Button } from \"reactstrap\"\nimport { Link } from \"gatsby\"\n\nconst TagList = ({ tags }) => {\n  return (\n    <Fragment>\n      tags{\"() => \"}\n      <If condition={tags && tags.length > 0}>\n        <Then>\n          {tags.map((tag, i) => (\n            <Link to={`/tag/${tag}`} key={i}>\n              <Button size=\"sm\" className=\"mb-1 mr-2\">\n                {tag}\n              </Button>\n            </Link>\n          ))}\n        </Then>\n        <Else>{\"\"}</Else>\n      </If>\n    </Fragment>\n  )\n}\n\nexport default TagList\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport AuthorCard from \"../components/card/AuthorCard\"\nimport Layout from \"../components/container/layout\"\nimport DisqusComment from \"../components/comment/disqus\"\nimport TagList from \"../components/tag/tag-list\"\nimport { Row, Col } from \"reactstrap\"\n\nconst BlogPostTemplate = props => {\n  const post = props.data.markdownRemark\n\n  return (\n    <Layout\n      title={post.frontmatter.title}\n      featuredImage={post.frontmatter.featuredImage.publicURL}\n      description={post.frontmatter.description || post.excerpt}\n      keywords={post.frontmatter.tags}\n      slug={props.location.pathname}\n      isSmall\n    >\n      <h1>{post.frontmatter.title}</h1>\n      <span className=\"post-date\">{post.frontmatter.date}</span>\n      <div\n        dangerouslySetInnerHTML={{ __html: post.html }}\n        className=\"post-content\"\n      />\n      <TagList tags={post.frontmatter.tags} />\n      <hr />\n      <Row>\n        <Col sm=\"12\" className=\"d-flex justify-content-center\">\n          <AuthorCard />\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col sm=\"12\">\n          <DisqusComment title={post.frontmatter.title} id={post.id} />\n        </Col>\n      </Row>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query blogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        description\n        tags\n        featuredImage {\n          publicURL\n        }\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState } from \"react\"\nimport { Container, Collapse, Navbar, Nav, NavItem } from \"reactstrap\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nconst NavBar = () => {\n  const [isOpen, toggle] = useState(false)\n  const { logoImage } = useStaticQuery(\n    graphql`\n      query {\n        logoImage: file(\n          absolutePath: { regex: \"/logo-naijab-with-text-red.png/\" }\n        ) {\n          childImageSharp {\n            fixed(height: 30) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <Navbar fixed=\"top\" expand=\"md\" className=\"navbar-white-shadow\">\n      <Container>\n        <Link to=\"/\" className=\"navbar-brand\">\n          <Image\n            fixed={logoImage.childImageSharp.fixed}\n            className=\"align-middle\"\n          />\n        </Link>\n\n        <div\n          className=\"d-md-none menu-mobile-trigger\"\n          onClick={() => toggle(!isOpen)}\n        >\n          MENU\n        </div>\n\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <Link to=\"/\" className=\"nav-link\">\n                ALL\n              </Link>\n            </NavItem>\n            <NavItem>\n              <Link to=\"/tag/life\" className=\"nav-link\">\n                LiFE\n              </Link>\n            </NavItem>\n            <NavItem>\n              <Link to=\"/tag/programming\" className=\"nav-link\">\n                PROGRAMMING\n              </Link>\n            </NavItem>\n            <NavItem>\n              <Link to=\"/tag/game\" className=\"nav-link\">\n                GAME\n              </Link>\n            </NavItem>\n            <NavItem>\n              <Link to=\"/tag/tech\" className=\"nav-link\">\n                TECH\n              </Link>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default NavBar\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Button } from \"reactstrap\"\nimport { FaGithub, FaTwitter, FaFacebook } from \"react-icons/fa\"\nconst Footer = () => {\n  const bioQuery = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            author\n            siteUrl\n            social {\n              email\n              github\n              facebook\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n  const { author, siteUrl, social } = bioQuery.site.siteMetadata\n  return (\n    <footer>\n      <p>\n        follow naijab at:\n        <div className=\"p-1\">\n          <a href={`https://github.com/${social.github}`}>\n            <Button outline className=\"mb-2\">\n              <FaGithub /> github\n            </Button>\n          </a>\n          {\"  \"}\n          <a href={`https://twitter.com/${social.twitter}`}>\n            <Button color=\"info\" className=\"mb-2\" outline>\n              <FaTwitter /> twitter\n            </Button>\n          </a>\n          {\"  \"}\n          <a href={`https://facebook.com/${social.facebook}`}>\n            <Button color=\"primary\" className=\"mb-2\" outline>\n              <FaFacebook /> facebook\n            </Button>\n          </a>\n        </div>\n      </p>\n      <p className=\"copyright\">\n        © {new Date().getFullYear()} <a href={siteUrl}>naijab.com</a> by{\" \"}\n        <a href={`mailto:${social.email}`}>{author}</a>\n        <br /> Built with <a href=\"https://reactjs.org/\">React</a> and{\" \"}\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </p>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport uniq from \"lodash/uniq\"\n\nconst SEO = ({\n  title,\n  slug,\n  featuredImage,\n  keywords,\n  description,\n  lang,\n  meta,\n}) => {\n  const { site, defaultFeaturedImage } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            slogan\n            description\n            keywords\n            author\n            siteUrl\n            key {\n              facebookAppId\n            }\n            social {\n              github\n              facebook\n              twitter\n            }\n          }\n        }\n        defaultFeaturedImage: file(\n          absolutePath: { regex: \"/default_featured_image.jpg/\" }\n        ) {\n          publicURL\n        }\n      }\n    `\n  )\n\n  const metaTitle = `${title || site.siteMetadata.slogan} | ${\n    site.siteMetadata.title\n  }`\n  const metaKeywords =\n    keywords.length > 0\n      ? uniq(keywords.concat(site.siteMetadata.keywords)).join(`, `)\n      : site.siteMetadata.keywords.join(`, `)\n\n  const metaDescription = description || site.siteMetadata.description\n  const metaImage = featuredImage\n    ? `${site.siteMetadata.siteUrl}${featuredImage.substring(1)}`\n    : `${site.siteMetadata.siteUrl}${defaultFeaturedImage.publicURL.substring(\n        1\n      )}`\n  const metaUrl = slug\n    ? `${site.siteMetadata.siteUrl}${slug.substring(1)}`\n    : `${site.siteMetadata.siteUrl}`\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={metaTitle}\n      titleTemplate={`%s`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          name: `keywords`,\n          content: metaKeywords,\n        },\n        {\n          property: `fb:app_id`,\n          content: site.siteMetadata.key.facebookAppId,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: `og:title`,\n          content: metaTitle,\n        },\n        {\n          property: `og:url`,\n          content: metaUrl,\n        },\n        {\n          property: `og:image`,\n          content: metaImage,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:site`,\n          content: `@${site.siteMetadata.social.twitter}`,\n        },\n        {\n          name: `twitter:title`,\n          content: metaTitle,\n        },\n        {\n          name: `twitter:image`,\n          content: metaImage,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `th`,\n  meta: [],\n  keywords: [],\n}\n\nexport default SEO\n","import React, { Fragment } from \"react\"\nimport { Container } from \"reactstrap\"\nimport NavBar from \"../menu/navbar\"\nimport Footer from \"../footer/footer\"\nimport SEO from \"../seo/seo\"\n\nconst Layout = props => {\n  const containerStyle = props.isSmall ? \"post-container\" : \"default-container\"\n  return (\n    <Fragment>\n      <SEO\n        title={props.title}\n        featuredImage={props.featuredImage}\n        description={props.description}\n        keywords={props.keywords}\n        slug={props.slug}\n      />\n      <NavBar />\n      <Container className={containerStyle}>{props.children}</Container>\n      <Footer />\n    </Fragment>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}