{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/components/comment/disqus.js","webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/menu/navbar.js","webpack:///./src/components/footer/footer.js","webpack:///./src/components/seo.js","webpack:///./src/components/container/layout.js"],"names":["bioQuery","Bio","react_default","a","createElement","gatsby_browser_entry","query","render","data","_data$site$siteMetada","site","siteMetadata","author","social","gatsby_image_default","fixed","avatar","childImageSharp","alt","style","marginBottom","minWidth","borderRadius","imgStyle","href","github","fa","facebook","twitter","_1377786559","DisqusComment","_ref","disqusConfig","identifier","id","title","className","lib","shortname","config","__webpack_require__","d","__webpack_exports__","pageQuery","BlogPostTemplate","props","post","markdownRemark","_props$pageContext","pageContext","previous","next","layout","frontmatter","featuredImage","publicURL","description","excerpt","slug","location","pathname","isSmall","sizes","date","dangerouslySetInnerHTML","__html","html","bio","display","flexWrap","justifyContent","listStyle","padding","to","fields","rel","disqus","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","Object","assign","json","shape","logoQuery","NavBar","_useState","useState","isOpen","toggle","Navbar","color","dark","expand","Container","logoImage","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","_460178464","Footer","Date","getFullYear","SEO","keywords","lang","meta","_978216286","metaTitle","slogan","metaDescription","metaImage","siteUrl","substring","metaUrl","Helmet_default","htmlAttributes","titleTemplate","name","content","property","key","facebookAppId","concat","length","join","defaultProps","array","arrayOf","Layout","containerStyle","react","seo","footer"],"mappings":"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","file":"component---src-templates-blog-post-js-698e1edade33464ef277.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\nimport { FaGithub, FaFacebook, FaTwitter } from \"react-icons/fa\"\n\nconst Bio = () => {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div>\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p>\n              <strong>{author}</strong> <br /> แค่คนเหาชอบเขียนโค้ด คลั่งไคล้\n              Dark Souls และร้องเพลงเป็นชีวิตจิตใจ\n              {` `}\n              <br />\n              <a href={`https://github.com/${social.github}`}>\n                <FaGithub />\n              </a>\n              {` `}\n              <a href={`https://facebook.com/${social.facebook}`}>\n                <FaFacebook />\n              </a>\n              {` `}\n              <a href={`https://twitter.com/${social.twitter}`}>\n                <FaTwitter />\n              </a>\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          github\n          facebook\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n","import React from \"react\"\nimport { DiscussionEmbed } from \"disqus-react\"\n\nconst DisqusComment = ({ id, title }) => {\n  const disqusConfig = {\n    identifier: id,\n    title: title,\n  }\n  return (\n    <div className=\"pt-5 pb-5\">\n      <DiscussionEmbed shortname=\"naijab\" config={disqusConfig} />\n    </div>\n  )\n}\n\nexport default DisqusComment\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/container/layout\"\nimport DisqusComment from \"../components/comment/disqus\"\n\nconst BlogPostTemplate = props => {\n  const post = props.data.markdownRemark\n  const { previous, next } = props.pageContext\n\n  return (\n    <Layout\n      title={post.frontmatter.title}\n      featuredImage={post.frontmatter.featuredImage.publicURL}\n      description={post.frontmatter.description || post.excerpt}\n      slug={props.location.pathname}\n      isSmall\n    >\n      <h1>{post.frontmatter.title}</h1>\n      <Image sizes={post.frontmatter.featuredImage.childImageSharp.sizes} />\n      <p>{post.frontmatter.date}</p>\n      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      <hr />\n      <Bio />\n\n      <ul\n        style={{\n          display: `flex`,\n          flexWrap: `wrap`,\n          justifyContent: `space-between`,\n          listStyle: `none`,\n          padding: 0,\n        }}\n      >\n        <li>\n          {previous && (\n            <Link to={previous.fields.slug} rel=\"prev\">\n              {\"<-\"} {previous.frontmatter.title}\n            </Link>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Link to={next.fields.slug} rel=\"next\">\n              {next.frontmatter.title} {\"->\"}\n            </Link>\n          )}\n        </li>\n      </ul>\n\n      <DisqusComment title={post.frontmatter.title} id={post.id} />\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query blogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        featuredImage {\n          publicURL\n          childImageSharp {\n            sizes(maxWidth: 630) {\n              ...GatsbyImageSharpSizes\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState } from \"react\"\nimport {\n  Container,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n} from \"reactstrap\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nconst NavBar = () => {\n  const [isOpen, toggle] = useState(false)\n\n  return (\n    <StaticQuery\n      query={logoQuery}\n      render={data => {\n        return (\n          <Navbar\n            color=\"light\"\n            fixed=\"top\"\n            dark\n            expand=\"md\"\n            className=\"navbar-red-shadow\"\n          >\n            <Container>\n              <Link to=\"/\" className=\"navbar-brand\">\n                <Image\n                  fixed={data.logoImage.childImageSharp.fixed}\n                  className=\"align-middle\"\n                />\n              </Link>\n              <NavbarToggler onClick={() => toggle(!isOpen)} />\n              <Collapse isOpen={isOpen} navbar>\n                <Nav className=\"ml-auto\" navbar>\n                  <NavItem>\n                    <Link to=\"/life\" className=\"nav-link\">\n                      LiFE\n                    </Link>\n                  </NavItem>\n                  <NavItem>\n                    <Link to=\"/programming\" className=\"nav-link\">\n                      PROGRAMMING\n                    </Link>\n                  </NavItem>\n                  <NavItem>\n                    <Link to=\"/game\" className=\"nav-link\">\n                      GAME\n                    </Link>\n                  </NavItem>\n                  <NavItem>\n                    <Link to=\"/tech\" className=\"nav-link\">\n                      TECH\n                    </Link>\n                  </NavItem>\n                </Nav>\n              </Collapse>\n            </Container>\n          </Navbar>\n        )\n      }}\n    />\n  )\n}\n\nconst logoQuery = graphql`\n  query logoQuery {\n    logoImage: file(absolutePath: { regex: \"/logo-naijab-with-text.png/\" }) {\n      childImageSharp {\n        fixed(height: 30) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`\n\nexport default NavBar\n","import React from \"react\"\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>\n        © {new Date().getFullYear()} <a href=\"https://naijab.com\">naijab.com</a>{\" \"}\n        , Built with\n        <a href=\"https://www.gatsbyjs.org\"> Gatsby</a>\n      </p>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({\n  title,\n  slug,\n  featuredImage,\n  keywords,\n  description,\n  lang,\n  meta,\n}) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            slogan\n            description\n            keywords\n            author\n            siteUrl\n            key {\n              facebookAppId\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaTitle = `${title || site.siteMetadata.slogan} | ${\n    site.siteMetadata.title\n  }`\n  const metaDescription = description || site.siteMetadata.description\n  const metaImage = featuredImage\n    ? `${site.siteMetadata.siteUrl}${featuredImage.substring(1)}`\n    : `${site.siteMetadata.siteUrl}`\n  const metaUrl = slug\n    ? `${site.siteMetadata.siteUrl}${slug.substring(1)}`\n    : `${site.siteMetadata.siteUrl}`\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={metaTitle}\n      titleTemplate={`%s`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `fb:app_id`,\n          content: site.siteMetadata.key.facebookAppId,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: `og:title`,\n          content: metaTitle,\n        },\n        {\n          property: `og:url`,\n          content: metaUrl,\n        },\n        {\n          property: `og:image`,\n          content: metaImage,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: metaTitle,\n        },\n        {\n          name: `twitter:image`,\n          content: metaImage,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.concat(site.siteMetadata.keywords).join(`, `),\n              }\n            : site.siteMetadata.keywords.join(`, `)\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `th`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React, { Fragment } from \"react\"\nimport { Container } from \"reactstrap\"\nimport NavBar from \"../menu/navbar\"\nimport Footer from \"../footer/footer\"\nimport SEO from \"../seo\"\n\nconst Layout = props => {\n  const containerStyle = props.isSmall ? \"post-container\" : \"default-container\"\n  return (\n    <Fragment>\n      <SEO\n        title={props.title}\n        featuredImage={props.featuredImage}\n        description={props.description}\n        keywords={props.keywords}\n        slug={props.slug}\n      />\n      <NavBar />\n      <Container className={containerStyle}>{props.children}</Container>\n      <Footer />\n    </Fragment>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}