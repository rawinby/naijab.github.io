{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/menu/navbar.js","webpack:///./src/components/footer/footer.js","webpack:///./src/components/container/layout.js"],"names":["bioQuery","Bio","react_default","a","createElement","gatsby_browser_entry","query","render","data","_data$site$siteMetada","site","siteMetadata","author","social","gatsby_image_default","fixed","avatar","childImageSharp","alt","style","marginBottom","minWidth","borderRadius","imgStyle","href","github","fa","facebook","twitter","_1377786559","BlogPostTemplate","post","this","props","markdownRemark","siteTitle","title","_this$props$pageConte","pageContext","previous","next","layout","location","isPostDetail","seo","frontmatter","description","excerpt","date","dangerouslySetInnerHTML","__html","html","bio","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","SEO","_ref","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","defaultProps","array","arrayOf","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","NavBar","_useState","useState","isOpen","toggle","Navbar","color","light","expand","className","Container","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","Footer","Date","getFullYear","Layout","containerStyle","isHome","react","footer"],"mappings":"2LAiDMA,EAAQ,aAsBCC,EAlEH,WACV,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAON,EACPO,OAAQ,SAAAC,GAAQ,IAAAC,EACaD,EAAKE,KAAKC,aAA7BC,EADMH,EACNG,OAAQC,EADFJ,EACEI,OAChB,OACEX,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEY,MAAOP,EAAKQ,OAAOC,gBAAgBF,MACnCG,IAAKN,EACLO,MAAO,CACLC,aAAc,EACdC,SAAU,GACVC,aAAY,QAEdC,SAAU,CACRD,aAAY,SAGhBpB,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,cAASQ,GADX,IAC4BV,EAAAC,EAAAC,cAAA,WAD5B,2EAIEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGoB,KAAI,sBAAwBX,EAAOY,QACpCvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,OANJ,IASExB,EAAAC,EAAAC,cAAA,KAAGoB,KAAI,wBAA0BX,EAAOc,UACtCzB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,OAVJ,IAaExB,EAAAC,EAAAC,cAAA,KAAGoB,KAAI,uBAAyBX,EAAOe,SACrC1B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,UAhCZlB,KAAAqB,mECDEC,4FACJvB,OAAA,WACE,IAAMwB,EAAOC,KAAKC,MAAMzB,KAAK0B,eACvBC,EAAYH,KAAKC,MAAMzB,KAAKE,KAAKC,aAAayB,MAF7CC,EAGoBL,KAAKC,MAAMK,YAA9BC,EAHDF,EAGCE,SAAUC,EAHXH,EAGWG,KAElB,OACEtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAQC,SAAUV,KAAKC,MAAMS,SAAUN,MAAOD,EAAWQ,cAAY,GACnEzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACER,MAAOL,EAAKc,YAAYT,MACxBU,YAAaf,EAAKc,YAAYC,aAAef,EAAKgB,UAEpD7C,EAAAC,EAAAC,cAAA,UAAK2B,EAAKc,YAAYT,OACtBlC,EAAAC,EAAAC,cAAA,SAAI2B,EAAKc,YAAYG,MACrB9C,EAAAC,EAAAC,cAAA,OAAK6C,wBAAyB,CAAEC,OAAQnB,EAAKoB,QAC7CjD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACgD,EAAD,MAEAlD,EAAAC,EAAAC,cAAA,MACEe,MAAO,CACLkC,QAAO,OACPC,SAAQ,OACRC,eAAc,gBACdC,UAAS,OACTC,QAAS,IAGXvD,EAAAC,EAAAC,cAAA,UACGmC,GACCrC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqD,GAAInB,EAASoB,OAAOC,KAAMC,IAAI,QACjC,KADH,IACUtB,EAASM,YAAYT,QAInClC,EAAAC,EAAAC,cAAA,UACGoC,GACCtC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqD,GAAIlB,EAAKmB,OAAOC,KAAMC,IAAI,QAC7BrB,EAAKK,YAAYT,MADpB,IAC4B,aArCX0B,IAAMC,WAiDxBC,GAFElC,YAEO,+CCvDtBmC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,GAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAAM,EAAAG,GAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,EAAAxE,IAAA8D,EAAA,SAYMW,EAAqBd,IAAMe,cAAc,IAEzCT,EAAc,SAAAnC,GAAK,OACvBqC,EAAAnE,EAAAC,cAACwE,EAAmBE,SAApB,KACG,SAAAC,GACC,OACE9C,EAAMzB,MACLuE,EAAgB9C,EAAM3B,QAAUyE,EAAgB9C,EAAM3B,OAAOE,MAEtDyB,EAAM1B,QAAU0B,EAAM+C,UAC5B/C,EAAMzB,KAAOyB,EAAMzB,KAAKA,KAAOuE,EAAgB9C,EAAM3B,OAAOE,MAGvD8D,EAAAnE,EAAAC,cAAA,uCA4BfgE,EAAYa,UAAY,CACtBzE,KAAM0E,IAAUC,OAChB7E,MAAO4E,IAAUE,OAAOC,WACxB9E,OAAQ2E,IAAUI,KAClBN,SAAUE,IAAUI,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,mGCKzCK,EAAM,SAAAC,GAAkD,IAA/C/C,EAA+C+C,EAA/C/C,YAAagD,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,KAAMC,EAAsBH,EAAtBG,SAAU5D,EAAYyD,EAAZzD,MACxC1B,EADoDuF,EAAAzF,KACpDE,KAcFwF,EAAkBpD,GAAepC,EAAKC,aAAamC,YAEzD,OACEqD,EAAAhG,EAAAC,cAACgG,EAAAjG,EAAD,CACEkG,eAAgB,CACdP,QAEF1D,MAAOA,EACPkE,cAAa,QAAU5F,EAAKC,aAAayB,MACzC2D,KAAM,CACJ,CACEQ,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAAYpE,EAAL,MAAgB1B,EAAKC,aAAayB,OAE3C,CACEqE,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAS9F,EAAKC,aAAaC,QAE7B,CACE2F,KAAI,gBACJC,QAAYpE,EAAL,MAAgB1B,EAAKC,aAAayB,OAE3C,CACEmE,KAAI,sBACJC,QAASN,IAGVQ,OACCV,EAASW,OAAS,EACd,CACEJ,KAAI,WACJC,QAASR,EAASY,KAAT,OAEX,IAELF,OAAOX,MAKhBH,EAAIiB,aAAe,CACjBf,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZJ,EAAIX,UAAY,CACdnC,YAAaoC,IAAUE,OACvBU,KAAMZ,IAAUE,OAChBW,KAAMb,IAAU4B,MAChBd,SAAUd,IAAU6B,QAAQ7B,IAAUE,QACtChD,MAAO8C,IAAUE,OAAOC,YAGXO,wGCpFToB,EAAmB,SAAAnB,GAAkB,IAAfnD,EAAemD,EAAfnD,SACpBuE,EAAgBC,UAAOC,4BAA4BzE,EAAS0E,UAClE,OAAOtD,IAAM1D,cAAciH,IAApBC,OAAAC,OAAA,CACL7E,WACAuE,iBACGA,EAAcO,QAIrBR,EAAiB/B,UAAY,CAC3BvC,SAAUwC,IAAUuC,MAAM,CACxBL,SAAUlC,IAAUE,OAAOC,aAC1BA,YAGU2B,kSC6CAU,EArDA,WAAM,IAAAC,EACMC,oBAAS,GAA3BC,EADYF,EAAA,GACJG,EADIH,EAAA,GAGnB,OACEzH,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CACEC,MAAM,QACNjH,MAAM,MACNkH,OAAK,EACLC,OAAO,KACPC,UAAU,uBAEVjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,KACElI,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAa7G,KAAK,KAAlB,cACAtB,EAAAC,EAAAC,cAACkI,EAAA,EAAD,CAAeC,QAAS,kBAAMT,GAAQD,MACtC3H,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAUX,OAAQA,EAAQY,QAAM,GAC9BvI,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAKP,UAAU,UAAUM,QAAM,GAC7BvI,EAAAC,EAAAC,cAACuI,EAAA,EAAD,KACEzI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqD,GAAG,OAAOyE,UAAU,YAA1B,QAIFjI,EAAAC,EAAAC,cAACuI,EAAA,EAAD,KACEzI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqD,GAAG,OAAOyE,UAAU,YAA1B,QAIFjI,EAAAC,EAAAC,cAACuI,EAAA,EAAD,KACEzI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqD,GAAG,QAAQyE,UAAU,YAA3B,SAIFjI,EAAAC,EAAAC,cAACuI,EAAA,EAAD,KACEzI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqD,GAAG,QAAQyE,UAAU,YAA3B,SAIFjI,EAAAC,EAAAC,cAACuI,EAAA,EAAD,KACEzI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqD,GAAG,QAAQyE,UAAU,YAA3B,SAIFjI,EAAAC,EAAAC,cAACuI,EAAA,EAAD,KACEzI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqD,GAAG,OAAOyE,UAAU,YAA1B,aCvCCS,EAZA,WACb,OACE1I,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,eACK,IAAIyI,MAAOC,cADhB,IAC+B5I,EAAAC,EAAAC,cAAA,KAAGoB,KAAK,sBAAR,cAA4C,IAD3E,eAGEtB,EAAAC,EAAAC,cAAA,KAAGoB,KAAK,4BAAR,uBCYOuH,IAhBA,SAAA9G,GACb,IAAM+G,EAAiB/G,EAAMgH,OAAS,iBAAmB,oBACzD,OACE/I,EAAAC,EAAAC,cAAC8I,EAAA,SAAD,KACEhJ,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACER,MAAOH,EAAMG,MACbU,YAAab,EAAMa,YACnBkD,SAAU/D,EAAM+D,WAElB9F,EAAAC,EAAAC,cAACqI,EAAD,MACAvI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAWD,UAAWa,GAAiB/G,EAAM+C,UAC7C9E,EAAAC,EAAAC,cAAC+I,EAAD","file":"component---src-templates-blog-post-js-52c147cb22ff1a513816.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\nimport { FaGithub, FaFacebook, FaTwitter } from \"react-icons/fa\"\n\nconst Bio = () => {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div>\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p>\n              <strong>{author}</strong> <br /> แค่คนเหาชอบเขียนโค้ด คลั่งไคล้\n              Dark Souls และร้องเพลงเป็นชีวิตจิตใจ\n              {` `}\n              <br />\n              <a href={`https://github.com/${social.github}`}>\n                <FaGithub />\n              </a>\n              {` `}\n              <a href={`https://facebook.com/${social.facebook}`}>\n                <FaFacebook />\n              </a>\n              {` `}\n              <a href={`https://twitter.com/${social.twitter}`}>\n                <FaTwitter />\n              </a>\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          github\n          facebook\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/container/layout\"\nimport SEO from \"../components/seo\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle} isPostDetail>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <h1>{post.frontmatter.title}</h1>\n        <p>{post.frontmatter.date}</p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr />\n        <Bio />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                {\"<-\"} {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} {\"->\"}\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query blogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ description, lang, meta, keywords, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: `${title} | ${site.siteMetadata.title}`,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: `${title} | ${site.siteMetadata.title}`,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState } from \"react\"\nimport {\n  Container,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n} from \"reactstrap\"\nimport { Link } from \"gatsby\"\n\nconst NavBar = () => {\n  const [isOpen, toggle] = useState(false)\n\n  return (\n    <Navbar\n      color=\"light\"\n      fixed=\"top\"\n      light\n      expand=\"md\"\n      className=\"navbar-light-shadow\"\n    >\n      <Container>\n        <NavbarBrand href=\"/\">naijab.com</NavbarBrand>\n        <NavbarToggler onClick={() => toggle(!isOpen)} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <Link to=\"/app\" className=\"nav-link\">\n                APP\n              </Link>\n            </NavItem>\n            <NavItem>\n              <Link to=\"/web\" className=\"nav-link\">\n                WEB\n              </Link>\n            </NavItem>\n            <NavItem>\n              <Link to=\"/game\" className=\"nav-link\">\n                GAME\n              </Link>\n            </NavItem>\n            <NavItem>\n              <Link to=\"/tech\" className=\"nav-link\">\n                TECH\n              </Link>\n            </NavItem>\n            <NavItem>\n              <Link to=\"/life\" className=\"nav-link\">\n                LiFE\n              </Link>\n            </NavItem>\n            <NavItem>\n              <Link to=\"/all\" className=\"nav-link\">\n                ALL\n              </Link>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default NavBar\n","import React, { Fragment } from \"react\"\nimport { Container } from \"reactstrap\"\nimport Styled from \"styled-components\"\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>\n        © {new Date().getFullYear()} <a href=\"https://naijab.com\">naijab.com</a>{\" \"}\n        , Built with\n        <a href=\"https://www.gatsbyjs.org\"> Gatsby</a>\n      </p>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React, { Fragment } from \"react\"\nimport { Container } from \"reactstrap\"\nimport NavBar from \"../menu/navbar\"\nimport Footer from \"../footer/footer\"\nimport SEO from \"../seo\"\n\nconst Layout = props => {\n  const containerStyle = props.isHome ? \"home-container\" : \"default-container\"\n  return (\n    <Fragment>\n      <SEO\n        title={props.title}\n        description={props.description}\n        keywords={props.keywords}\n      />\n      <NavBar />\n      <Container className={containerStyle}>{props.children}</Container>\n      <Footer />\n    </Fragment>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}