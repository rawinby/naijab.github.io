{"version":3,"sources":["webpack:///./src/components/post/post-item.js","webpack:///./src/components/post/post-list.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/menu/navbar.js","webpack:///./src/components/footer/footer.js","webpack:///./src/components/container/layout.js"],"names":["PostItem","_ref","id","image","title","slug","date","isHome","postSizeInHome","react_default","a","createElement","Col","sm","className","Card","gatsby_image_default","fluid","CardBody","CardTitle","gatsby_browser_entry","to","CardSubtitle","propTypes","PropTypes","string","isRequired","PostList","posts","react","ReactIf","condition","length","Row","map","_ref2","key","node","_node$frontmatter","frontmatter","featuredImage","fields","post_item","childImageSharp","array","__webpack_require__","d","__webpack_exports__","pageQuery","HomePage","props","data","allMarkdownRemark","edges","layout","location","keywords","post_list","Button","color","size","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","query","render","children","object","func","m","module","exports","require","default","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","defaultProps","arrayOf","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","NavBar","_useState","useState","isOpen","toggle","Navbar","fixed","dark","expand","Container","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","Footer","Date","getFullYear","href","Layout","containerStyle","seo","footer"],"mappings":"+NAMMA,EAAW,SAAAC,GAA8C,IAA3CC,EAA2CD,EAA3CC,GAAIC,EAAuCF,EAAvCE,MAAOC,EAAgCH,EAAhCG,MAAOC,EAAyBJ,EAAzBI,KAAMC,EAAmBL,EAAnBK,KAAMC,EAAaN,EAAbM,OAC1CC,EAAiBN,EAAK,EAAI,EAAI,EACpC,OACEO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,GAAIN,EAASC,EAAiB,EAAGM,UAAU,QAC9CL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMD,UAAU,aACdL,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAOI,UAAU,eAAeG,MAAOd,IACvCM,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAIhB,GACRI,EAAAC,EAAAC,cAAA,UAAKP,KAGTK,EAAAC,EAAAC,cAACW,EAAA,EAAD,KAAehB,OAOzBN,EAASuB,UAAY,CACnBnB,MAAOoB,YAAUC,OAAOC,WACxBrB,KAAMmB,YAAUC,OAAOC,WACvBpB,KAAMkB,YAAUC,OAAOC,YAGV1B,iBCzBT2B,EAAW,SAAA1B,GAAuB,IAApB2B,EAAoB3B,EAApB2B,MAAOrB,EAAaN,EAAbM,OACzB,OACEE,EAAAC,EAAAC,cAACkB,EAAA,SAAD,KACEpB,EAAAC,EAAAC,cAACmB,EAAA,GAAD,CAAIC,UAAWH,EAAMI,OAAS,GAC5BvB,EAAAC,EAAAC,cAACmB,EAAA,KAAD,KACErB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACGL,EAAMM,IAAI,SAAAC,EAAWC,GAAQ,IAAhBC,EAAgBF,EAAhBE,KAAgBC,EACWD,EAAKE,YAApCnC,EADoBkC,EACpBlC,MAAOE,EADagC,EACbhC,KAAMkC,EADOF,EACPE,cACbnC,EAASgC,EAAKI,OAAdpC,KACR,OACEI,EAAAC,EAAAC,cAAC+B,EAAD,CACEtC,MAAOA,EACPD,MAAOqC,EAAcG,gBAAgB1B,MACrCX,KAAMA,EACND,KAAMA,EACN+B,IAAKA,EACLlC,GAAIkC,EACJ7B,OAAQA,QAMlBE,EAAAC,EAAAC,cAACmB,EAAA,KAAD,KACErB,EAAAC,EAAAC,cAAA,2BAOVgB,EAASJ,UAAY,CACnBK,MAAOJ,IAAUoB,MAAMlB,YAGVC,iBCzCfkB,EAAAC,EAAAC,EAAA,8BAAAC,IA4CeC,UArCE,SAAAC,GACf,IAAMtB,EAAQsB,EAAMC,KAAKC,kBAAkBC,MAE3C,OACE5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CACEC,SAAUL,EAAMK,SAChBnD,MAAM,iCACNoD,SAAU,CACR,aACA,QACA,UACA,MACA,UACA,cACA,UACA,gBACA,YACA,YAEFjD,QAAM,GAENE,EAAAC,EAAAC,cAAC8C,EAAD,CAAU7B,MAAOA,EAAOrB,QAAM,IAC9BE,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAKnB,UAAU,2CACbL,EAAAC,EAAAC,cAACmB,EAAA,GAAD,CAAIC,UAAWH,EAAMI,QAAU,IAC7BvB,EAAAC,EAAAC,cAACmB,EAAA,KAAD,KACErB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,KACPZ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAQC,MAAM,UAAUC,KAAK,MAA7B,yBA1Bd,IAuCaZ,EAAS,8CC9CtBH,EAAAC,EAAAC,EAAA,sBAAAc,IAAA,IAAAC,EAAAjB,EAAA,GAAAkB,EAAAlB,EAAAmB,EAAAF,GAAAG,EAAApB,EAAA,GAAAqB,EAAArB,EAAAmB,EAAAC,GAAAE,EAAAtB,EAAA,IAAAuB,EAAAvB,EAAAmB,EAAAG,GAAAtB,EAAAC,EAAAC,EAAA,sBAAAqB,EAAA1D,IAAAmC,EAAA,SAYMwB,EAAqBC,IAAMC,cAAc,IAEzCV,EAAc,SAAAX,GAAK,OACvBa,EAAArD,EAAAC,cAAC0D,EAAmBG,SAApB,KACG,SAAAC,GACC,OACEvB,EAAMC,MACLsB,EAAgBvB,EAAMwB,QAAUD,EAAgBvB,EAAMwB,OAAOvB,MAEtDD,EAAMyB,QAAUzB,EAAM0B,UAC5B1B,EAAMC,KAAOD,EAAMC,KAAKA,KAAOsB,EAAgBvB,EAAMwB,OAAOvB,MAGvDY,EAAArD,EAAAC,cAAA,uCA4BfkD,EAAYtC,UAAY,CACtB4B,KAAM3B,IAAUqD,OAChBH,MAAOlD,IAAUC,OAAOC,WACxBiD,OAAQnD,IAAUsD,KAClBF,SAAUpD,IAAUsD,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,mGCKzCK,EAAM,SAAAnF,GAAkD,IAA/CoF,EAA+CpF,EAA/CoF,YAAaC,EAAkCrF,EAAlCqF,KAAMC,EAA4BtF,EAA5BsF,KAAM/B,EAAsBvD,EAAtBuD,SAAUpD,EAAYH,EAAZG,MACxCoF,EADoDC,EAAAtC,KACpDqC,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACEO,EAAAlF,EAAAC,cAACkF,EAAAnF,EAAD,CACEoF,eAAgB,CACdR,QAEFlF,MAAOA,EACP2F,cAAa,QAAUP,EAAKG,aAAavF,MACzCmF,KAAM,CACJ,CACES,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAY7F,EAAL,MAAgBoF,EAAKG,aAAavF,OAE3C,CACE8F,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAST,EAAKG,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAAY7F,EAAL,MAAgBoF,EAAKG,aAAavF,OAE3C,CACE4F,KAAI,sBACJC,QAASP,IAGVU,OACC5C,EAASxB,OAAS,EACd,CACEgE,KAAI,WACJC,QAASzC,EAAS6C,KAAT,OAEX,IAELD,OAAOb,MAKhBH,EAAIkB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACN/B,SAAU,IAGZ4B,EAAI7D,UAAY,CACd8D,YAAa7D,IAAUC,OACvB6D,KAAM9D,IAAUC,OAChB8D,KAAM/D,IAAUoB,MAChBY,SAAUhC,IAAU+E,QAAQ/E,IAAUC,QACtCrB,MAAOoB,IAAUC,OAAOC,YAGX0D,wGCpFToB,EAAmB,SAAAvG,GAAkB,IAAfsD,EAAetD,EAAfsD,SACpBkD,EAAgBC,UAAOC,4BAA4BpD,EAASqD,UAClE,OAAOtC,IAAM3D,cAAckG,IAApBC,OAAAC,OAAA,CACLxD,WACAkD,iBACGA,EAAcO,QAIrBR,EAAiBjF,UAAY,CAC3BgC,SAAU/B,IAAUyF,MAAM,CACxBL,SAAUpF,IAAUC,OAAOC,aAC1BA,YAGU8E,yRC6CAU,EAvDA,WAAM,IAAAC,EACMC,oBAAS,GAA3BC,EADYF,EAAA,GACJG,EADIH,EAAA,GAGnB,OACE1G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CACE5D,MAAM,QACN6D,MAAM,MACNC,MAAI,EACJC,OAAO,KACP5G,UAAU,qBAEVL,EAAAC,EAAAC,cAACgH,EAAA,EAAD,KACElH,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,IAAIP,UAAU,gBAAvB,cAGAL,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAeC,QAAS,kBAAMP,GAAQD,MACtC5G,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CAAUT,OAAQA,EAAQU,QAAM,GAC9BtH,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAKlH,UAAU,UAAUiH,QAAM,GAC7BtH,EAAAC,EAAAC,cAACsH,EAAA,EAAD,KACExH,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,OAAOP,UAAU,YAA1B,QAIFL,EAAAC,EAAAC,cAACsH,EAAA,EAAD,KACExH,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,OAAOP,UAAU,YAA1B,QAIFL,EAAAC,EAAAC,cAACsH,EAAA,EAAD,KACExH,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,QAAQP,UAAU,YAA3B,SAIFL,EAAAC,EAAAC,cAACsH,EAAA,EAAD,KACExH,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,QAAQP,UAAU,YAA3B,SAIFL,EAAAC,EAAAC,cAACsH,EAAA,EAAD,KACExH,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,QAAQP,UAAU,YAA3B,SAIFL,EAAAC,EAAAC,cAACsH,EAAA,EAAD,KACExH,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,OAAOP,UAAU,YAA1B,aCzCCoH,EAZA,WACb,OACEzH,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,eACK,IAAIwH,MAAOC,cADhB,IAC+B3H,EAAAC,EAAAC,cAAA,KAAG0H,KAAK,sBAAR,cAA4C,IAD3E,eAGE5H,EAAAC,EAAAC,cAAA,KAAG0H,KAAK,4BAAR,uBCcOC,IAhBA,SAAApF,GACb,IAAMqF,EAAiBrF,EAAM3C,OAAS,iBAAmB,oBACzD,OACEE,EAAAC,EAAAC,cAACkB,EAAA,SAAD,KACEpB,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CACEpI,MAAO8C,EAAM9C,MACbiF,YAAanC,EAAMmC,YACnB7B,SAAUN,EAAMM,WAElB/C,EAAAC,EAAAC,cAACoH,EAAD,MACAtH,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAW7G,UAAWyH,GAAiBrF,EAAM0B,UAC7CnE,EAAAC,EAAAC,cAAC8H,EAAD","file":"component---src-pages-index-js-a59e5379b0b017875f54.js","sourcesContent":["import React from \"react\"\nimport { PropTypes } from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport { Col, Card, CardBody, CardTitle, CardSubtitle } from \"reactstrap\"\nimport Image from \"gatsby-image\"\n\nconst PostItem = ({ id, image, title, slug, date, isHome }) => {\n  const postSizeInHome = id > 1 ? 4 : 6\n  return (\n    <Col sm={isHome ? postSizeInHome : 4} className=\"pb-4\">\n      <Card className=\"post-item\">\n        <Image className=\"card-img-top\" fluid={image} />\n        <CardBody>\n          <CardTitle>\n            <Link to={slug}>\n              <h3>{title}</h3>\n            </Link>\n          </CardTitle>\n          <CardSubtitle>{date}</CardSubtitle>\n        </CardBody>\n      </Card>\n    </Col>\n  )\n}\n\nPostItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n}\n\nexport default PostItem\n","import React, { Fragment } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { If, Then, Else } from \"react-if\"\nimport PostItem from \"./post-item\"\nimport { Row } from \"reactstrap\"\n\nconst PostList = ({ posts, isHome }) => {\n  return (\n    <Fragment>\n      <If condition={posts.length > 0}>\n        <Then>\n          <Row>\n            {posts.map(({ node }, key) => {\n              const { title, date, featuredImage } = node.frontmatter\n              const { slug } = node.fields\n              return (\n                <PostItem\n                  title={title}\n                  image={featuredImage.childImageSharp.fluid}\n                  date={date}\n                  slug={slug}\n                  key={key}\n                  id={key}\n                  isHome={isHome}\n                />\n              )\n            })}\n          </Row>\n        </Then>\n        <Else>\n          <h3>No Post..</h3>\n        </Else>\n      </If>\n    </Fragment>\n  )\n}\n\nPostList.propTypes = {\n  posts: PropTypes.array.isRequired,\n}\n\nexport default PostList\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/container/layout\"\nimport PostList from \"../components/post/post-list\"\nimport { Button, Row } from \"reactstrap\"\nimport { If, Then } from \"react-if\"\n\nconst HomePage = props => {\n  const posts = props.data.allMarkdownRemark.edges\n\n  return (\n    <Layout\n      location={props.location}\n      title=\"just a lonely man likes coding\"\n      keywords={[\n        \"javascript\",\n        \"react\",\n        \"angular\",\n        \"vue\",\n        \"laravel\",\n        \"website dev\",\n        \"android\",\n        \"พัฒนาเว็บไซต์\",\n        \"เขียนเว็บ\",\n        \"เขียนแอพ\",\n      ]}\n      isHome\n    >\n      <PostList posts={posts} isHome />\n      <Row className=\"d-flex justify-content-center mt-2 mb-5\">\n        <If condition={posts.length >= 11}>\n          <Then>\n            <Link to=\"2\">\n              <Button color=\"primary\" size=\"lg\">\n                บทความเพิ่มเติม\n              </Button>\n            </Link>\n          </Then>\n        </If>\n      </Row>\n    </Layout>\n  )\n}\n\nexport default HomePage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 11\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 400, maxHeight: 250) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ description, lang, meta, keywords, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: `${title} | ${site.siteMetadata.title}`,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: `${title} | ${site.siteMetadata.title}`,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState } from \"react\"\nimport {\n  Container,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n} from \"reactstrap\"\nimport { Link } from \"gatsby\"\n\nconst NavBar = () => {\n  const [isOpen, toggle] = useState(false)\n\n  return (\n    <Navbar\n      color=\"light\"\n      fixed=\"top\"\n      dark\n      expand=\"md\"\n      className=\"navbar-red-shadow\"\n    >\n      <Container>\n        <Link to=\"/\" className=\"navbar-brand\">\n          naijab.com\n        </Link>\n        <NavbarToggler onClick={() => toggle(!isOpen)} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <Link to=\"/app\" className=\"nav-link\">\n                APP\n              </Link>\n            </NavItem>\n            <NavItem>\n              <Link to=\"/web\" className=\"nav-link\">\n                WEB\n              </Link>\n            </NavItem>\n            <NavItem>\n              <Link to=\"/game\" className=\"nav-link\">\n                GAME\n              </Link>\n            </NavItem>\n            <NavItem>\n              <Link to=\"/tech\" className=\"nav-link\">\n                TECH\n              </Link>\n            </NavItem>\n            <NavItem>\n              <Link to=\"/life\" className=\"nav-link\">\n                LiFE\n              </Link>\n            </NavItem>\n            <NavItem>\n              <Link to=\"/all\" className=\"nav-link\">\n                ALL\n              </Link>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default NavBar\n","import React from \"react\"\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>\n        © {new Date().getFullYear()} <a href=\"https://naijab.com\">naijab.com</a>{\" \"}\n        , Built with\n        <a href=\"https://www.gatsbyjs.org\"> Gatsby</a>\n      </p>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React, { Fragment } from \"react\"\nimport { Container } from \"reactstrap\"\nimport NavBar from \"../menu/navbar\"\nimport Footer from \"../footer/footer\"\nimport SEO from \"../seo\"\n\nconst Layout = props => {\n  const containerStyle = props.isHome ? \"home-container\" : \"default-container\"\n  return (\n    <Fragment>\n      <SEO\n        title={props.title}\n        description={props.description}\n        keywords={props.keywords}\n      />\n      <NavBar />\n      <Container className={containerStyle}>{props.children}</Container>\n      <Footer />\n    </Fragment>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}