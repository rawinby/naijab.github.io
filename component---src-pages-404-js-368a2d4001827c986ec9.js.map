{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/menu/navbar.js","webpack:///./src/components/footer/footer.js","webpack:///./src/components/seo.js","webpack:///./src/components/container/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_container_layout__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","props","a","createElement","title","location","isPostDetail","to","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","logoQuery","NavBar","_useState","useState","isOpen","toggle","react_default","gatsby_browser_entry","Navbar","color","fixed","dark","expand","className","Container","gatsby_image_default","logoImage","childImageSharp","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","_460178464","Footer","Date","getFullYear","href","SEO","slug","featuredImage","keywords","description","lang","meta","site","_1810596764","metaTitle","siteMetadata","slogan","metaDescription","metaImage","siteUrl","substring","metaUrl","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","Layout","containerStyle","isSmall","react","seo","footer"],"mappings":"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","file":"component---src-pages-404-js-368a2d4001827c986ec9.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../components/container/layout\"\n\nconst NotFoundPage = props => {\n  return (\n    <Layout title=\"404 Not Found\" location={props.location} isPostDetail>\n      <h1>404 Not Found</h1>\n      <p>\n        ขออภัยไม่พบหน้าที่ต้องการ :( <br />{\" \"}\n        <Link to=\"/all\">ลองค้นหาบทความ</Link>\n      </p>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState } from \"react\"\nimport {\n  Container,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n} from \"reactstrap\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nconst NavBar = () => {\n  const [isOpen, toggle] = useState(false)\n\n  return (\n    <StaticQuery\n      query={logoQuery}\n      render={data => {\n        return (\n          <Navbar\n            color=\"light\"\n            fixed=\"top\"\n            dark\n            expand=\"md\"\n            className=\"navbar-red-shadow\"\n          >\n            <Container>\n              <Link to=\"/\" className=\"navbar-brand\">\n                <Image\n                  fixed={data.logoImage.childImageSharp.fixed}\n                  className=\"align-middle\"\n                />\n              </Link>\n              <NavbarToggler onClick={() => toggle(!isOpen)} />\n              <Collapse isOpen={isOpen} navbar>\n                <Nav className=\"ml-auto\" navbar>\n                  <NavItem>\n                    <Link to=\"/life\" className=\"nav-link\">\n                      LiFE\n                    </Link>\n                  </NavItem>\n                  <NavItem>\n                    <Link to=\"/programming\" className=\"nav-link\">\n                      PROGRAMMING\n                    </Link>\n                  </NavItem>\n                  <NavItem>\n                    <Link to=\"/game\" className=\"nav-link\">\n                      GAME\n                    </Link>\n                  </NavItem>\n                  <NavItem>\n                    <Link to=\"/tech\" className=\"nav-link\">\n                      TECH\n                    </Link>\n                  </NavItem>\n                </Nav>\n              </Collapse>\n            </Container>\n          </Navbar>\n        )\n      }}\n    />\n  )\n}\n\nconst logoQuery = graphql`\n  query logoQuery {\n    logoImage: file(absolutePath: { regex: \"/logo-naijab-with-text.png/\" }) {\n      childImageSharp {\n        fixed(height: 30) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`\n\nexport default NavBar\n","import React from \"react\"\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>\n        © {new Date().getFullYear()} <a href=\"https://naijab.com\">naijab.com</a>{\" \"}\n        , Built with\n        <a href=\"https://www.gatsbyjs.org\"> Gatsby</a>\n      </p>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({\n  title,\n  slug,\n  featuredImage,\n  keywords,\n  description,\n  lang,\n  meta,\n}) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            slogan\n            description\n            keywords\n            author\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  const metaTitle = `${title || site.siteMetadata.slogan} | ${\n    site.siteMetadata.title\n  }`\n  const metaDescription = description || site.siteMetadata.description\n  const metaImage = featuredImage\n    ? `${site.siteMetadata.siteUrl}${featuredImage.substring(1)}`\n    : `${site.siteMetadata.siteUrl}`\n  const metaUrl = slug\n    ? `${site.siteMetadata.siteUrl}${slug.substring(1)}`\n    : `${site.siteMetadata.siteUrl}`\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={metaTitle}\n      titleTemplate={`%s`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: metaTitle,\n        },\n        {\n          property: `og:url`,\n          content: metaUrl,\n        },\n        {\n          property: `og:image`,\n          content: metaImage,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: metaTitle,\n        },\n        {\n          property: `twitter:image`,\n          content: metaImage,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.concat(site.siteMetadata.keywords).join(`, `),\n              }\n            : site.siteMetadata.keywords.join(`, `)\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React, { Fragment } from \"react\"\nimport { Container } from \"reactstrap\"\nimport NavBar from \"../menu/navbar\"\nimport Footer from \"../footer/footer\"\nimport SEO from \"../seo\"\n\nconst Layout = props => {\n  const containerStyle = props.isSmall ? \"post-container\" : \"default-container\"\n  return (\n    <Fragment>\n      <SEO\n        title={props.title}\n        featuredImage={props.featuredImage}\n        description={props.description}\n        keywords={props.keywords}\n        slug={props.slug}\n      />\n      <NavBar />\n      <Container className={containerStyle}>{props.children}</Container>\n      <Footer />\n    </Fragment>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}